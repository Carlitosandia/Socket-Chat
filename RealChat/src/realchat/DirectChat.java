/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package realchat;

import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Carlo
 */
public class DirectChat extends javax.swing.JFrame {

    private Cliente cliente;
    private JFileChooser fileChooser;
    private String usuario;
    private String usuarioSelected;
    private String mensaje;

    /**
     * Creates new form DirectChat
     */
    public DirectChat() {
        initComponents();
        fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        txtChatDm.setEditable(false);
        txtChatDm.setFocusable(false);
        runDm();
    }

    public void obtenerCliente(Cliente cliente) {
        this.cliente = cliente;
    }

    public void obtenerUsuarios(String usuario, String usuarioSelected) {
        this.usuario = usuario;
        this.usuarioSelected = usuarioSelected;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtChatDm = new javax.swing.JTextArea();
        lblNombre = new javax.swing.JLabel();
        txtEntry = new javax.swing.JTextField();
        btnArchivos = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtChatDm.setColumns(20);
        txtChatDm.setRows(5);
        jScrollPane1.setViewportView(txtChatDm);

        txtEntry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEntryKeyPressed(evt);
            }
        });

        btnArchivos.setText("Upload");
        btnArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArchivosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnArchivos)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArchivos))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArchivosActionPerformed
        // TODO add your handling code here:
        int resultado = fileChooser.showOpenDialog(this); // Abre la ventana de selección de archivos
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            // Aquí puedes manejar el archivo seleccionado, como obtener su ruta o nombre
            // Por ejemplo:
            String rutaArchivo = file.getAbsolutePath();
            JOptionPane.showMessageDialog(this, "Has seleccionado el archivo: " + rutaArchivo);
            cliente.recibirArchivo(file, usuario, usuarioSelected);
        } else {
            System.out.println("El archivo no existe");
        }
    }//GEN-LAST:event_btnArchivosActionPerformed

    private void txtEntryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEntryKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            // Realiza una acción cuando se presiona la tecla Enter
            try {
                mensaje = txtEntry.getText();
                cliente.recibirDm(mensaje, usuario, usuarioSelected);
                txtEntry.setText("");
            } catch (IOException ioe) {
                ioe.printStackTrace();
            }
            evt.consume();
        }
    }//GEN-LAST:event_txtEntryKeyPressed
    public  void runDm() {
    Thread hiloReceptDm = new Thread(new Runnable() {
        @Override
        public void run() {
            while (true) {
                try {
                    // Recibe un mensaje del servidor
                    String respuesta = cliente.recibirMensaje();
                    if (respuesta.startsWith("MsgDm")) {
                        System.out.println("Ya en el direct chat");
                        StringTokenizer st = new StringTokenizer(respuesta, "^");
                        String comm = st.nextToken();
                        usuario = st.nextToken();
                        String usuarioSelected = st.nextToken();
                        String msg = st.nextToken();
                        msg += "\n\r";
                        txtChatDm.append(msg);
                        txtChatDm.revalidate();
                        txtChatDm.repaint();
                    }
                } catch (IOException ioe) {
                    ioe.printStackTrace();
                }
            }
        }
    });
    // Inicia el hilo
    hiloReceptDm.start();
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DirectChat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DirectChat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DirectChat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DirectChat.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DirectChat().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArchivos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTextArea txtChatDm;
    javax.swing.JTextField txtEntry;
    // End of variables declaration//GEN-END:variables
}
